name: Sync AI Studio from Google Drive

on:
  schedule:
    - cron: '0 */6 * * *'  # every 6 hours
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python Google APIs
        run: pip install google-api-python-client google-auth google-auth-httplib2 google-auth-oauthlib

      - name: Save service account key to file
        env:
          GDRIVE_SERVICE_KEY: ${{ secrets.GDRIVE_MARINASUITE_SERVICE_KEY }}
        run: echo "$GDRIVE_SERVICE_KEY" > service_account.json

      - name: Write Python script to download ZIP
        run: |
          echo "import json" > gdrive_download.py
          echo "from google.oauth2 import service_account" >> gdrive_download.py
          echo "from googleapiclient.discovery import build" >> gdrive_download.py
          echo "import io" >> gdrive_download.py
          echo "from googleapiclient.http import MediaIoBaseDownload" >> gdrive_download.py
          echo "" >> gdrive_download.py
          echo "creds = service_account.Credentials.from_service_account_file('service_account.json')" >> gdrive_download.py
          echo "drive = build('drive', 'v3', credentials=creds)" >> gdrive_download.py
          echo "" >> gdrive_download.py
          echo "results = drive.files().list(q=\"name='Quanzab ERP Lite.zip' and trashed=false\", spaces='drive', fields='files(id, name)').execute()" >> gdrive_download.py
          echo "files = results.get('files', [])" >> gdrive_download.py
          echo "if not files:" >> gdrive_download.py
          echo "    raise Exception('File not found')" >> gdrive_download.py
          echo "file_id = files[0]['id']" >> gdrive_download.py
          echo "request = drive.files().get_media(fileId=file_id)" >> gdrive_download.py
          echo "fh = io.FileIO('quanzab.zip', 'wb')" >> gdrive_download.py
          echo "downloader = MediaIoBaseDownload(fh, request)" >> gdrive_download.py
          echo "done = False" >> gdrive_download.py
          echo "while not done:" >> gdrive_download.py
          echo "    status, done = downloader.next_chunk()" >> gdrive_download.py
          echo "    print(f'Download progress: {int(status.progress() * 100)}%')" >> gdrive_download.py

      - name: Run Python Script
        run: python3 gdrive_download.py

      - name: Unzip and Sync
        run: |
          rm -rf project && mkdir project
          unzip -o quanzab.zip -d project
          cp -r project/* ./

      - name: Commit and Push Changes
        run: |
          git config user.name "aistudio-bot"
          git config user.email "bot@aistudio.com"
          git add .
          git commit -m "Auto-sync from Google Drive [$(date)]" || echo "No changes"
          git push
